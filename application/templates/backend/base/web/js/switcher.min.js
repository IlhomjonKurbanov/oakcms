(function(g,c){var k="switcher";var e={className:"switcher",selected:null,language:"en",disabled:null,style:"default",copy:{en:{yes:"yes",no:"no"},fr:{yes:"oui",no:"non"}}};function m(o,n){this.input=o;this.container=null;this.settings=g.extend({},e,g(o).data(),n);this._defaults=e;this._name=k;this.init()}g.extend(m.prototype,{init:function(){this.buildHtml(this.input,this.settings);this.bindEvents(this.container,this.settings)},buildHtml:function(o,p){var n=this;var q=g(o);q.wrap('<div class="'+p.className+" "+p.style+'"></div>');q.after('<div class="content clearfix"><div class="slider"></div><span class="text textYes"></span><span class="text textNo"></span></div>');this.container=g(q).parent("."+p.className)[0];n.setLanguage(p.language);n.setValue(p.selected);n.setDisabled(p.disabled)},bindEvents:function(n,p){var o=this;var q=g(n);var r=q.find("input");q.on("click",function(s){if(p.disabled){return}if(r.attr("type")=="radio"){o.setValue(true)}else{if(q.closest("label").length){o.setValue(r.prop("checked"))}else{o.setValue(!r.prop("checked"))}}});q.on("swipeleft",function(){if(p.disabled){return}o.setValue(false)});q.on("swiperight",function(){if(p.disabled){return}o.setValue(true)})},setValue:function(s){var p=this;var t=g(p.input);var r=g(p.container);if(s===null){if(t.attr("type")=="radio"){s=typeof t.filter(":checked").val()!=="undefined"}else{s=t.prop("checked")}}if(typeof s!="boolean"){return console.log("The parameter need to be true or false as a boolean")}p.settings.selected=s;t.prop("checked",s).trigger("change");if(t.attr("type")=="radio"){var q=t.attr("name");var n=g('input[name="'+q+'"]');var o=n.parent("."+p.settings.className);if(s===true){o.removeClass("is-active");n.prop("checked",false);r.addClass("is-active");t.prop("checked",true)}}else{if(s===true){r.addClass("is-active")}else{r.removeClass("is-active")}}},setDisabled:function(p){var n=this;var q=g(n.input);var o=g(n.container);if(p===null){if(q.attr("disabled")){p=true}else{p=false}}if(typeof p!="boolean"){return console.log("The parameter need to be true or false as a boolean")}n.settings.disabled=p;if(p===true){o.addClass("is-disabled")}else{o.removeClass("is-disabled")}},setLanguage:function(p){var n=this;var o=g(n.container);n.settings.language=p;o.find(".textYes").text(n.settings.copy[p].yes);o.find(".textNo").text(n.settings.copy[p].no)},getLanguage:function(o){var n=this;return o(n.settings.language)},importLanguage:function(o){var n=this;n.settings.copy=o}});g.fn[k]=function(o){var n=Array.prototype.slice.call(arguments,1);this.each(function(){var q=g(this);var p=q.data("plugin_"+k);if(!p){q.data("plugin_"+k,new m(this,o))}else{if(typeof o==="string"){p[o].apply(p,n)}}});return this};var j=0;var h=0;var b=false;var i=30;function l(){this.removeEventListener("touchmove",a);this.removeEventListener("touchend",l);b=false}function a(r){r.preventDefault();if(b){var n=r.touches[0].pageX;var s=r.touches[0].pageY;var p=j-n;var o=h-s;var q=null;if(Math.abs(p)>=i){q=p>0?"left":"right"}else{if(Math.abs(o)>=i){q=o>0?"down":"up"}}if(q){l.call(this);g(this).trigger("swipe",q).trigger("swipe"+q)}}}function f(n){if(n.touches.length==1){j=n.touches[0].pageX;h=n.touches[0].pageY;b=true;this.addEventListener("touchmove",a,false);this.addEventListener("touchend",l,false)}}function d(){this.addEventListener&&this.addEventListener("touchstart",f,false)}g.event.special.swipe={setup:d};g.each(["left","up","down","right"],function(){g.event.special["swipe"+this]={setup:function(){g(this).on("swipe",g.noop)}}})})($);